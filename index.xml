<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>伤心肠粉的酱油碟子</title><link>https://trouvaille0198.github.io/Notes/</link><description>伤心肠粉的酱油碟子</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Mon, 07 Mar 2022 23:08:26 +0800</lastBuildDate><atom:link href="https://trouvaille0198.github.io/Notes/index.xml" rel="self" type="application/rss+xml"/><item><title>Docker</title><link>https://trouvaille0198.github.io/Notes/posts/golang/docker/</link><pubDate>Mon, 07 Mar 2022 23:08:26 +0800</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/golang/docker/</guid><description>Docker</description></item><item><title>Go 基础语法</title><link>https://trouvaille0198.github.io/Notes/posts/golang/basicgrammar/</link><pubDate>Mon, 07 Mar 2022 14:27:12 +0800</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/golang/basicgrammar/</guid><description>Golang Go is an open source programming language supported by Google Easy to learn and get started with Built-in concurrency and a robust standard library Growing ecosystem of partners, communities, and tools 安装 下载地址：https://go.dev/dl/ 使用 Linux 1 2 3 4 5 6 $ wget https://studygolang.com/dl/golang/go1.13.6.linux-amd64.tar.gz $</description></item><item><title>9. 回文数</title><link>https://trouvaille0198.github.io/Notes/posts/%E5%88%B7%E9%A2%98/others/9.-%E5%9B%9E%E6%96%87%E6%95%B0/</link><pubDate>Mon, 07 Mar 2022 00:00:00 +0000</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/%E5%88%B7%E9%A2%98/others/9.-%E5%9B%9E%E6%96%87%E6%95%B0/</guid><description>9. 回文数 给你一个整数 x ，如果 x 是一个回文整数，返回 true ；否则，返回 false 。 回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。 例如，12</description></item><item><title>Go 类型系统</title><link>https://trouvaille0198.github.io/Notes/posts/golang/%E8%BF%9B%E9%98%B6/go-%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E8%AF%A6%E8%A7%A3/</link><pubDate>Mon, 07 Mar 2022 00:00:00 +0000</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/golang/%E8%BF%9B%E9%98%B6/go-%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E8%AF%A6%E8%A7%A3/</guid><description>Go 类型系统 太难了根本看不懂 T T 概述 本文将介绍 Go 中的各个类型种类。Go 类型系统中的各种概念也将被介绍。 概念：基本类型（basic type） 内置</description></item><item><title>Go 非类型安全指针</title><link>https://trouvaille0198.github.io/Notes/posts/golang/%E8%BF%9B%E9%98%B6/%E9%9D%9E%E7%B1%BB%E5%9E%8B%E5%AE%89%E5%85%A8%E6%8C%87%E9%92%88/</link><pubDate>Mon, 07 Mar 2022 00:00:00 +0000</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/golang/%E8%BF%9B%E9%98%B6/%E9%9D%9E%E7%B1%BB%E5%9E%8B%E5%AE%89%E5%85%A8%E6%8C%87%E9%92%88/</guid><description>非类型安全指针 我们已经从Go中的指针一文中学习到关于指针的各种概念和规则。 从那篇文章中，我们得知，相对于C指针，Go指针有很多限制。 比如，G</description></item><item><title>Tailwind</title><link>https://trouvaille0198.github.io/Notes/posts/frontend/css/tailwind/</link><pubDate>Sun, 06 Mar 2022 15:09:36 +0800</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/frontend/css/tailwind/</guid><description>Tailwind 要点 响应式变体 移动优先，未加前缀的功能类在所有的屏幕上都生效 而加了前缀的功能类（如 md:uppercase）仅在指定断点及以上的屏幕上生效</description></item><item><title>channel 用例大全</title><link>https://trouvaille0198.github.io/Notes/posts/golang/%E8%BF%9B%E9%98%B6/channel-%E7%94%A8%E4%BE%8B%E5%A4%A7%E5%85%A8/</link><pubDate>Sun, 06 Mar 2022 00:00:00 +0000</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/golang/%E8%BF%9B%E9%98%B6/channel-%E7%94%A8%E4%BE%8B%E5%A4%A7%E5%85%A8/</guid><description>channel 用例大全 本文摘自 https://gfw.go101.org/article/channel-use-cases.html 本文将展示很多通道用例。 希望这篇文章能够说服你接收下面的观点： 使用通道进行异步和并发编程是简单和惬意的； 通道同步技术比被</description></item><item><title>54. 螺旋矩阵</title><link>https://trouvaille0198.github.io/Notes/posts/%E5%88%B7%E9%A2%98/array/54.-%E8%9E%BA%E6%97%8B%E7%9F%A9%E9%98%B5/</link><pubDate>Sat, 05 Mar 2022 00:00:00 +0000</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/%E5%88%B7%E9%A2%98/array/54.-%E8%9E%BA%E6%97%8B%E7%9F%A9%E9%98%B5/</guid><description>54. 螺旋矩阵 mid 给你一个 m 行 n 列的矩阵 matrix ，请按照 顺时针螺旋顺序 ，返回矩阵中的所有元素。 示例 1： 1 2 输入：matrix = [[1,2,3],[4,5,6],[7,8,9]] 输出：[1,2,3,6,</description></item><item><title>283. 移动零</title><link>https://trouvaille0198.github.io/Notes/posts/%E5%88%B7%E9%A2%98/array/283.-%E7%A7%BB%E5%8A%A8%E9%9B%B6/</link><pubDate>Fri, 04 Mar 2022 00:00:00 +0000</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/%E5%88%B7%E9%A2%98/array/283.-%E7%A7%BB%E5%8A%A8%E9%9B%B6/</guid><description>283. 移动零 easy 给定一个数组 nums，编写一个函数将所有 0 移动到数组的末尾，同时保持非零元素的相对顺序。 请注意 ，必须在不复制数组的情况下原地对数组</description></item><item><title>367. 有效的完全平方数</title><link>https://trouvaille0198.github.io/Notes/posts/%E5%88%B7%E9%A2%98/array/367.-%E6%9C%89%E6%95%88%E7%9A%84%E5%AE%8C%E5%85%A8%E5%B9%B3%E6%96%B9%E6%95%B0/</link><pubDate>Fri, 04 Mar 2022 00:00:00 +0000</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/%E5%88%B7%E9%A2%98/array/367.-%E6%9C%89%E6%95%88%E7%9A%84%E5%AE%8C%E5%85%A8%E5%B9%B3%E6%96%B9%E6%95%B0/</guid><description>367. 有效的完全平方数 easy 给定一个 正整数 num ，编写一个函数，如果 num 是一个完全平方数，则返回 true ，否则返回 false 。 进阶：不要 使用任何内置的库函数，如 sqrt 。 示例</description></item></channel></rss>