<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Python - 分类 - 伤心肠粉的酱油碟子</title><link>https://trouvaille0198.github.io/Notes/categories/python/</link><description>Python - 分类 - 伤心肠粉的酱油碟子</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sun, 27 Feb 2022 23:32:46 +0800</lastBuildDate><atom:link href="https://trouvaille0198.github.io/Notes/categories/python/" rel="self" type="application/rss+xml"/><item><title>Python 基础语法</title><link>https://trouvaille0198.github.io/Notes/posts/python/basicgrammar/</link><pubDate>Sun, 27 Feb 2022 23:32:46 +0800</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/python/basicgrammar/</guid><description>基础语法 认识 强类型语言：解释器会根据赋值或运算来自动推断变量类型 动态类型语言：变量类型可以随时变化，是为 “状态机” 对象模型 对象：python</description></item><item><title>matplotlib</title><link>https://trouvaille0198.github.io/Notes/posts/python/dataanalysis/matplotlib/</link><pubDate>Sat, 26 Feb 2022 23:22:58 +0800</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/python/dataanalysis/matplotlib/</guid><description><![CDATA[matplotlib 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 from birthday import get_p import matplotlib.pyplot as plt import seaborn as sns sns.set() m = 2000 n = [i for i in range(100)] q = [get_p(m, i) for i in n] plt.plot(n, q) plt.xlabel(&#34;student number&#34;) plt.ylabel(&#34;probability&#34;) plt.legend() plt.savefig(fname=&#39;pic.png&#39;) plt.show() 创建图片与子图 若不创建实例，]]></description></item><item><title>numpy</title><link>https://trouvaille0198.github.io/Notes/posts/python/dataanalysis/numpy/</link><pubDate>Sat, 26 Feb 2022 23:22:58 +0800</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/python/dataanalysis/numpy/</guid><description>numpy 数组基础 属性 ndarray.ndim 数组的轴（维度）的个数。在Python世界中，维度的数量被称为rank（秩） ndarray.shape 数组的维度。这是一个整数的元组，表示每个维度中</description></item><item><title>pandas</title><link>https://trouvaille0198.github.io/Notes/posts/python/dataanalysis/pandas/</link><pubDate>Sat, 26 Feb 2022 23:22:58 +0800</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/python/dataanalysis/pandas/</guid><description>pandas 分类与创建 Series Series是一种类似于以为NumPy数组的对象，它由一组数据（各种NumPy数据类型）和与之相关的一组数据标签（即索引）组成</description></item><item><title>sklearn</title><link>https://trouvaille0198.github.io/Notes/posts/python/machinelearning/sklearn/</link><pubDate>Sat, 26 Feb 2022 23:22:58 +0800</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/python/machinelearning/sklearn/</guid><description>sklearn 特征工程 (Feature Engineering) 特征工程是使用专业背景知识和技巧处理数据**，**使得特征能在机器学习算法上发挥更好的作用的过程 数据集 scikit-learn 提供了一些标准数据集 1</description></item><item><title>Django</title><link>https://trouvaille0198.github.io/Notes/posts/python/web-backend/django/</link><pubDate>Fri, 25 Feb 2022 23:54:13 +0800</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/python/web-backend/django/</guid><description>Django 认识 概念 URLs: 虽然可以通过单个功能来处理来自每个URL的请求，但是编写单独的视图函数来处理每个资源是更加可维护的。URL映射器用于根据请求UR</description></item><item><title>FastAPI</title><link>https://trouvaille0198.github.io/Notes/posts/python/web-backend/fastapi/</link><pubDate>Fri, 25 Feb 2022 23:54:13 +0800</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/python/web-backend/fastapi/</guid><description>FastAPI 认识 运行 1 uvicorn main:app --reload main：main.py 文件（一个 Python「模块」）。 app：在 main.py 文件中通过 app = FastAPI() 创建的对象。 --reload：让服务</description></item><item><title>Flask</title><link>https://trouvaille0198.github.io/Notes/posts/python/web-backend/flask/</link><pubDate>Fri, 25 Feb 2022 23:54:13 +0800</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/python/web-backend/flask/</guid><description><![CDATA[Flask 例子 初始化 1 2 3 4 5 6 7 8 9 10 from flask import Flask app = Flask(__name__) @app.route(&#39;/&#39;) def hello_world(): return &#39;Hello, World!&#39; app.run(debug=True) # 自动以调试方式运行 若想要在命令行中控制运行 1 2 $ set FLASK_APP=hello.py $ flask run 若想要其他机器访问 1]]></description></item><item><title>SQLAlchemy</title><link>https://trouvaille0198.github.io/Notes/posts/python/web-backend/sqlalchemy/</link><pubDate>Fri, 25 Feb 2022 23:54:13 +0800</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/python/web-backend/sqlalchemy/</guid><description>SQLAlchemy 认识 ORM：Object Relational Mapping（对象关系映射）将数据库中的表与类构建映射 简洁易读：将数据表抽象为对象（数据模型），更直观易读 可移</description></item><item><title>CV2</title><link>https://trouvaille0198.github.io/Notes/posts/python/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/cv2/</link><pubDate>Sun, 20 Feb 2022 00:00:00 +0000</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/python/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/cv2/</guid><description><![CDATA[CV2 认识 安装 1 2 pip install opencv-python pip install opencv-contrib-python 图片的基本操作 图片的加载、显示与保存 1 2 3 4 5 6 7 8 9 10 11 12 13 import cv2 # 生成图片 img = cv2.imread(&#34;1.jpg&#34;) # 生成灰色图片 imgGrey = cv2.imread(&#34;1.jpg&#34;, 0) # 展示原图]]></description></item></channel></rss>