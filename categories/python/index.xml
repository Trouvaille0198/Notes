<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Python - 分类 - 伤心肠粉的酱油碟子</title><link>https://trouvaille0198.github.io/Notes/categories/python/</link><description>Python - 分类 - 伤心肠粉的酱油碟子</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sun, 13 Aug 2023 17:02:34 +0800</lastBuildDate><atom:link href="https://trouvaille0198.github.io/Notes/categories/python/" rel="self" type="application/rss+xml"/><item><title>pydantic models</title><link>https://trouvaille0198.github.io/Notes/posts/python/web-backend/pydantic/models/</link><pubDate>Sun, 13 Aug 2023 17:02:34 +0800</pubDate><author>MelonCholi</author><guid>https://trouvaille0198.github.io/Notes/posts/python/web-backend/pydantic/models/</guid><description>models 通过创建一个继承 BaseModel 的子类（model）来定义一类对象（defining obje</description></item><item><title>正则表达式</title><link>https://trouvaille0198.github.io/Notes/posts/python/crawler/regularexpression/</link><pubDate>Sun, 13 Aug 2023 17:02:34 +0800</pubDate><author>MelonCholi</author><guid>https://trouvaille0198.github.io/Notes/posts/python/crawler/regularexpression/</guid><description>正则表达式 清晰易懂版 单字符匹配 字符 功能 . 匹配任意1个字符（除了\n） [ ] 匹配[ ]</description></item><item><title>Python 基础语法</title><link>https://trouvaille0198.github.io/Notes/posts/python/basicgrammar/</link><pubDate>Mon, 31 Jul 2023 22:08:48 +0800</pubDate><author>MelonCholi</author><guid>https://trouvaille0198.github.io/Notes/posts/python/basicgrammar/</guid><description>&lt;div class="featured-image">
&lt;img src="https://markdown-1303167219.cos.ap-shanghai.myqcloud.com/PYTHONLANG3.jpg" referrerpolicy="no-referrer">
&lt;/div>Python 基础语法 认识 Python 是一种动态类型语言（运行时做数据类型检查）、也是一种强类型语言（</description></item><item><title>Flask</title><link>https://trouvaille0198.github.io/Notes/posts/python/web-backend/flask/</link><pubDate>Tue, 11 Jul 2023 21:32:31 +0800</pubDate><author>MelonCholi</author><guid>https://trouvaille0198.github.io/Notes/posts/python/web-backend/flask/</guid><description><![CDATA[Flask 例子 初始化 1 2 3 4 5 6 7 8 9 10 from flask import Flask app = Flask(__name__) @app.route(&#39;/&#39;) def hello_world(): return &#39;Hello, World!&#39; app.run(debug=True) # 自动以调试方式运行]]></description></item><item><title>GeoGuessr 常用的小技巧</title><link>https://trouvaille0198.github.io/Notes/posts/games/geoguessr/%E5%B8%B8%E7%94%A8%E7%9A%84%E5%B0%8F%E6%8A%80%E5%B7%A7/</link><pubDate>Wed, 28 Jun 2023 00:00:00 +0000</pubDate><author>MelonCholi</author><guid>https://trouvaille0198.github.io/Notes/posts/games/geoguessr/%E5%B8%B8%E7%94%A8%E7%9A%84%E5%B0%8F%E6%8A%80%E5%B7%A7/</guid><description>常用的小技巧 气候 生物群系 车牌 欧洲 欧盟的车牌还是非常容易区分的。车牌左边或者两边会</description></item><item><title>pandas</title><link>https://trouvaille0198.github.io/Notes/posts/python/dataanalysis/pandas/</link><pubDate>Sat, 13 May 2023 17:24:23 +0800</pubDate><author>MelonCholi</author><guid>https://trouvaille0198.github.io/Notes/posts/python/dataanalysis/pandas/</guid><description>pandas 分类与创建 Series Series 是一种类似于以为 NumPy 数组的对象，它由一组数据（各种 NumPy 数据类型）和与</description></item><item><title>numpy</title><link>https://trouvaille0198.github.io/Notes/posts/python/dataanalysis/numpy/</link><pubDate>Wed, 22 Feb 2023 21:48:36 +0800</pubDate><author>MelonCholi</author><guid>https://trouvaille0198.github.io/Notes/posts/python/dataanalysis/numpy/</guid><description>numpy 数组基础 属性 ndarray.ndim 数组的轴（维度）的个数。在 Python 世界中，维度的数量被称为 rank（秩</description></item><item><title>pydantic field types</title><link>https://trouvaille0198.github.io/Notes/posts/python/web-backend/pydantic/field-types/</link><pubDate>Fri, 02 Dec 2022 20:33:48 +0800</pubDate><author>MelonCholi</author><guid>https://trouvaille0198.github.io/Notes/posts/python/web-backend/pydantic/field-types/</guid><description>field types pydantic 尽可能的使用标准库类型（standard library types）来标注字段来提供一个</description></item><item><title>Python rich 库 - Column</title><link>https://trouvaille0198.github.io/Notes/posts/python/%E5%8F%AF%E8%A7%86%E5%8C%96/rich/column/</link><pubDate>Fri, 02 Dec 2022 00:00:00 +0000</pubDate><author>MelonCholi</author><guid>https://trouvaille0198.github.io/Notes/posts/python/%E5%8F%AF%E8%A7%86%E5%8C%96/rich/column/</guid><description>Column Rich 可以通过 Columns 类在整齐的列中渲染文本或其他 Rich 渲染物。 To use, construct a Columns instance with an iterable of renderables and print it</description></item><item><title>Python rich 库 - Console</title><link>https://trouvaille0198.github.io/Notes/posts/python/%E5%8F%AF%E8%A7%86%E5%8C%96/rich/layout/</link><pubDate>Fri, 02 Dec 2022 00:00:00 +0000</pubDate><author>MelonCholi</author><guid>https://trouvaille0198.github.io/Notes/posts/python/%E5%8F%AF%E8%A7%86%E5%8C%96/rich/layout/</guid><description>Layout Rich 提供了一个 Layout 类，可用于将屏幕区域划分为若干部分，其中每个部分可包含独立的内容</description></item></channel></rss>