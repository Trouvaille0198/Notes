<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>刷题 - 分类 - 伤心肠粉的酱油碟子</title><link>https://trouvaille0198.github.io/Notes/categories/%E5%88%B7%E9%A2%98/</link><description>刷题 - 分类 - 伤心肠粉的酱油碟子</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Fri, 25 Feb 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://trouvaille0198.github.io/Notes/categories/%E5%88%B7%E9%A2%98/" rel="self" type="application/rss+xml"/><item><title>算法技巧</title><link>https://trouvaille0198.github.io/Notes/posts/%E5%88%B7%E9%A2%98/%E6%8A%80%E5%B7%A7/</link><pubDate>Fri, 25 Feb 2022 00:00:00 +0000</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/%E5%88%B7%E9%A2%98/%E6%8A%80%E5%B7%A7/</guid><description>技巧 数组 双指针 计算过程仅与两端点相关的称为双指针。 快慢指针：都从头开始，遍历条件不同，所以速度不同 头尾指针：一个从头，一个从尾；二分法就是一</description></item><item><title>offer 11</title><link>https://trouvaille0198.github.io/Notes/posts/%E5%88%B7%E9%A2%98/array/%E5%89%91%E6%8C%87-offer-11.-%E6%97%8B%E8%BD%AC%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%8F%E6%95%B0%E5%AD%97/</link><pubDate>Sun, 20 Feb 2022 00:00:00 +0000</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/%E5%88%B7%E9%A2%98/array/%E5%89%91%E6%8C%87-offer-11.-%E6%97%8B%E8%BD%AC%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%8F%E6%95%B0%E5%AD%97/</guid><description>剑指 Offer 11. 旋转数组的最小数字 easy binary search 把一个数组最开始的若干个元素搬到数组的末尾，我们称之为数组的旋转。 给你一个可能存在重复元素值的数组 numbers ，它原来</description></item><item><title>offer 21</title><link>https://trouvaille0198.github.io/Notes/posts/%E5%88%B7%E9%A2%98/array/%E5%89%91%E6%8C%87-offer-21.-%E8%B0%83%E6%95%B4%E6%95%B0%E7%BB%84%E9%A1%BA%E5%BA%8F%E4%BD%BF%E5%A5%87%E6%95%B0%E4%BD%8D%E4%BA%8E%E5%81%B6%E6%95%B0%E5%89%8D%E9%9D%A2/</link><pubDate>Sun, 20 Feb 2022 00:00:00 +0000</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/%E5%88%B7%E9%A2%98/array/%E5%89%91%E6%8C%87-offer-21.-%E8%B0%83%E6%95%B4%E6%95%B0%E7%BB%84%E9%A1%BA%E5%BA%8F%E4%BD%BF%E5%A5%87%E6%95%B0%E4%BD%8D%E4%BA%8E%E5%81%B6%E6%95%B0%E5%89%8D%E9%9D%A2/</guid><description>剑指 Offer 21. 调整数组顺序使奇数位于偶数前面 easy 双指针 输入一个整数数组，实现一个函数来调整该数组中数字的顺序，使得所有奇数在数组的前半部分，所有偶数</description></item><item><title>Offer 3</title><link>https://trouvaille0198.github.io/Notes/posts/%E5%88%B7%E9%A2%98/array/%E5%89%91%E6%8C%87-offer-03.-%E6%95%B0%E7%BB%84%E4%B8%AD%E9%87%8D%E5%A4%8D%E7%9A%84%E6%95%B0%E5%AD%97/</link><pubDate>Sun, 20 Feb 2022 00:00:00 +0000</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/%E5%88%B7%E9%A2%98/array/%E5%89%91%E6%8C%87-offer-03.-%E6%95%B0%E7%BB%84%E4%B8%AD%E9%87%8D%E5%A4%8D%E7%9A%84%E6%95%B0%E5%AD%97/</guid><description>剑指 Offer 03. 数组中重复的数字 easy search https://leetcode-cn.com/problems/shu-zu-zhong-zhong-fu-de-shu-zi-lcof/ 找出数组中重复的数字。 在一个长度为 n 的数组 nums 里的所有数字都在 0～n-1 的范围内。数组中某些数字是重复的，但不知</description></item><item><title>offer 30</title><link>https://trouvaille0198.github.io/Notes/posts/%E5%88%B7%E9%A2%98/array/%E5%89%91%E6%8C%87-offer-30.-%E5%8C%85%E5%90%AB-min-%E5%87%BD%E6%95%B0%E7%9A%84%E6%A0%88/</link><pubDate>Sun, 20 Feb 2022 00:00:00 +0000</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/%E5%88%B7%E9%A2%98/array/%E5%89%91%E6%8C%87-offer-30.-%E5%8C%85%E5%90%AB-min-%E5%87%BD%E6%95%B0%E7%9A%84%E6%A0%88/</guid><description>剑指 Offer 30. 包含 min 函数的栈 easy stack https://leetcode-cn.com/problems/bao-han-minhan-shu-de-zhan-lcof/ 定义栈的数据结构，请在该类型中实现一个能够得到栈的最小元素的 min 函数在该栈中，调用 min、push 及 pop 的时间复杂度</description></item><item><title>offer 4</title><link>https://trouvaille0198.github.io/Notes/posts/%E5%88%B7%E9%A2%98/array/%E5%89%91%E6%8C%87-offer-04.-%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9F%A5%E6%89%BE/</link><pubDate>Sun, 20 Feb 2022 00:00:00 +0000</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/%E5%88%B7%E9%A2%98/array/%E5%89%91%E6%8C%87-offer-04.-%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9F%A5%E6%89%BE/</guid><description>剑指 Offer 04. 二维数组中的查找 mid search 在一个 n * m 的二维数组中，每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。 请完成一个高效</description></item><item><title>offer 9</title><link>https://trouvaille0198.github.io/Notes/posts/%E5%88%B7%E9%A2%98/array/%E5%89%91%E6%8C%87-offer-09.-%E7%94%A8%E4%B8%A4%E4%B8%AA%E6%A0%88%E5%AE%9E%E7%8E%B0%E9%98%9F%E5%88%97/</link><pubDate>Sun, 20 Feb 2022 00:00:00 +0000</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/%E5%88%B7%E9%A2%98/array/%E5%89%91%E6%8C%87-offer-09.-%E7%94%A8%E4%B8%A4%E4%B8%AA%E6%A0%88%E5%AE%9E%E7%8E%B0%E9%98%9F%E5%88%97/</guid><description>剑指 Offer 09. 用两个栈实现队列 easy stack https://leetcode-cn.com/problems/yong-liang-ge-zhan-shi-xian-dui-lie-lcof/ 用两个栈实现一个队列。队列的声明如下，请实现它的两个函数 appendTail 和 deleteHead ，分别完成在队列尾部插入整数和在队列头部删除整数</description></item></channel></rss>