<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>刷题 - 分类 - 伤心肠粉的酱油碟子</title><link>https://trouvaille0198.github.io/Notes/categories/%E5%88%B7%E9%A2%98/</link><description>刷题 - 分类 - 伤心肠粉的酱油碟子</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Mon, 28 Feb 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://trouvaille0198.github.io/Notes/categories/%E5%88%B7%E9%A2%98/" rel="self" type="application/rss+xml"/><item><title>剑指 Offer 07. 重建二叉树</title><link>https://trouvaille0198.github.io/Notes/posts/%E5%88%B7%E9%A2%98/tree/%E5%89%91%E6%8C%87-offer-07.-%E9%87%8D%E5%BB%BA%E4%BA%8C%E5%8F%89%E6%A0%91/</link><pubDate>Mon, 28 Feb 2022 00:00:00 +0000</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/%E5%88%B7%E9%A2%98/tree/%E5%89%91%E6%8C%87-offer-07.-%E9%87%8D%E5%BB%BA%E4%BA%8C%E5%8F%89%E6%A0%91/</guid><description>剑指 Offer 07. 重建二叉树 mid 输入某二叉树的前序遍历和中序遍历的结果，请构建该二叉树并返回其根节点。 假设输入的前序遍历和中序遍历的结果中都不含重复的数</description></item><item><title>剑指 Offer 26. 树的子结构</title><link>https://trouvaille0198.github.io/Notes/posts/%E5%88%B7%E9%A2%98/tree/%E5%89%91%E6%8C%87-offer-26.-%E6%A0%91%E7%9A%84%E5%AD%90%E7%BB%93%E6%9E%84/</link><pubDate>Mon, 28 Feb 2022 00:00:00 +0000</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/%E5%88%B7%E9%A2%98/tree/%E5%89%91%E6%8C%87-offer-26.-%E6%A0%91%E7%9A%84%E5%AD%90%E7%BB%93%E6%9E%84/</guid><description>剑指 Offer 26. 树的子结构 mid 输入两棵二叉树 A 和 B，判断 B 是不是 A 的子结构。(约定空树不是任意一个树的子结构) B 是 A 的子结构， 即 A 中有出现和 B 相同的结</description></item><item><title>剑指 Offer 55 - II. 平衡二叉树</title><link>https://trouvaille0198.github.io/Notes/posts/%E5%88%B7%E9%A2%98/tree/%E5%89%91%E6%8C%87-offer-55-ii.-%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%A0%91/</link><pubDate>Sun, 27 Feb 2022 00:00:00 +0000</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/%E5%88%B7%E9%A2%98/tree/%E5%89%91%E6%8C%87-offer-55-ii.-%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%A0%91/</guid><description>剑指 Offer 55 - II. 平衡二叉树 easy 输入一棵二叉树的根节点，判断该树是不是平衡二叉树。如果某二叉树中任意节点的左右子树的深度相差不超过1，那么它就是一棵</description></item><item><title>剑指 Offer 64. 求1+2+…+n</title><link>https://trouvaille0198.github.io/Notes/posts/%E5%88%B7%E9%A2%98/back-tracking/%E5%89%91%E6%8C%87-offer-64.-%E6%B1%821+2++n/</link><pubDate>Sun, 27 Feb 2022 00:00:00 +0000</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/%E5%88%B7%E9%A2%98/back-tracking/%E5%89%91%E6%8C%87-offer-64.-%E6%B1%821+2++n/</guid><description>剑指 Offer 64. 求1+2+…+n mid 求 1+2+...+n ，要求不能使用乘除法、for、while、if、else、switch、case等关键字及条件判断语句（A?B</description></item><item><title>剑指 Offer 68 - I. 二叉搜索树的最近公共祖先</title><link>https://trouvaille0198.github.io/Notes/posts/%E5%88%B7%E9%A2%98/tree/%E5%89%91%E6%8C%87-offer-68-i.-%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E7%9A%84%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88/</link><pubDate>Sun, 27 Feb 2022 00:00:00 +0000</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/%E5%88%B7%E9%A2%98/tree/%E5%89%91%E6%8C%87-offer-68-i.-%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E7%9A%84%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88/</guid><description>剑指 Offer 68 - I. 二叉搜索树的最近公共祖先 给定一个二叉搜索树, 找到该树中两个指定节点的最近公共祖先。(一个节点也可以是它自己的祖先) 两次遍历 1 2 3</description></item><item><title>剑指 Offer 68 - II. 二叉树的最近公共祖先</title><link>https://trouvaille0198.github.io/Notes/posts/%E5%88%B7%E9%A2%98/tree/%E5%89%91%E6%8C%87-offer-68-ii.-%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88/</link><pubDate>Sun, 27 Feb 2022 00:00:00 +0000</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/%E5%88%B7%E9%A2%98/tree/%E5%89%91%E6%8C%87-offer-68-ii.-%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88/</guid><description>剑指 Offer 68 - II. 二叉树的最近公共祖先 给定一个二叉树, 找到该树中两个指定节点的最近公共祖先。 DFS 递归地判断子树是否包含了 p 或 q 1 2 3 4 5 6 7 8 9 10 11</description></item><item><title>209. 长度最小的子数组</title><link>https://trouvaille0198.github.io/Notes/posts/%E5%88%B7%E9%A2%98/array/209.-%E9%95%BF%E5%BA%A6%E6%9C%80%E5%B0%8F%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84/</link><pubDate>Sat, 26 Feb 2022 00:00:00 +0000</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/%E5%88%B7%E9%A2%98/array/209.-%E9%95%BF%E5%BA%A6%E6%9C%80%E5%B0%8F%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84/</guid><description>209. 长度最小的子数组 mid 给定一个含有 n 个正整数的数组和一个正整数 target 找出该数组中满足其和 ≥ target 的长度最小的 连续子数组 [numsl, numsl+1, ..., numsr-1, numsr]，并返回其长</description></item><item><title>59. 螺旋矩阵 II</title><link>https://trouvaille0198.github.io/Notes/posts/%E5%88%B7%E9%A2%98/array/59.-%E8%9E%BA%E6%97%8B%E7%9F%A9%E9%98%B5-ii/</link><pubDate>Sat, 26 Feb 2022 00:00:00 +0000</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/%E5%88%B7%E9%A2%98/array/59.-%E8%9E%BA%E6%97%8B%E7%9F%A9%E9%98%B5-ii/</guid><description>59. 螺旋矩阵 II 给你一个正整数 n ，生成一个包含 1 到 n2 所有元素，且元素按顺时针顺序螺旋排列的 n x n 正方形矩阵 matrix 。 1 &amp;lt;= n &amp;lt;= 20 模拟行为 就恩写；注意边界</description></item><item><title>7. 整数反转</title><link>https://trouvaille0198.github.io/Notes/posts/%E5%88%B7%E9%A2%98/array/7.-%E6%95%B4%E6%95%B0%E5%8F%8D%E8%BD%AC/</link><pubDate>Sat, 26 Feb 2022 00:00:00 +0000</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/%E5%88%B7%E9%A2%98/array/7.-%E6%95%B4%E6%95%B0%E5%8F%8D%E8%BD%AC/</guid><description>7. 整数反转 mid 给你一个 32 位的有符号整数 x ，返回将 x 中的数字部分反转后的结果。 如果反转后整数超过 32 位的有符号整数的范围 [−2^31^, 2^31^ − 1] ，就</description></item><item><title>76. 最小覆盖子串</title><link>https://trouvaille0198.github.io/Notes/posts/%E5%88%B7%E9%A2%98/string/76.-%E6%9C%80%E5%B0%8F%E8%A6%86%E7%9B%96%E5%AD%90%E4%B8%B2/</link><pubDate>Sat, 26 Feb 2022 00:00:00 +0000</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/%E5%88%B7%E9%A2%98/string/76.-%E6%9C%80%E5%B0%8F%E8%A6%86%E7%9B%96%E5%AD%90%E4%B8%B2/</guid><description>76. 最小覆盖子串 hard 给你一个字符串 s 、一个字符串 t 。返回 s 中涵盖 t 所有字符的最小子串。如果 s 中不存在涵盖 t 所有字符的子串，则返回空字符串 &amp;quot;&amp;quot; 。 注意</description></item></channel></rss>