<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Golang - 分类 - 伤心肠粉的酱油碟子</title><link>https://trouvaille0198.github.io/Notes/categories/golang/</link><description>Golang - 分类 - 伤心肠粉的酱油碟子</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Fri, 25 Feb 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://trouvaille0198.github.io/Notes/categories/golang/" rel="self" type="application/rss+xml"/><item><title>Go test 教程</title><link>https://trouvaille0198.github.io/Notes/posts/golang/go-test/</link><pubDate>Fri, 25 Feb 2022 00:00:00 +0000</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/golang/go-test/</guid><description>go test Go语言提供了go test 命令行工具，使用该工具可以很方便的进行测试。 不仅 Go 语言源码中大量使用 go test，在各种开源框架中的应用也极为普遍。 目</description></item><item><title>Go 专家编程</title><link>https://trouvaille0198.github.io/Notes/posts/golang/go-%E4%B8%93%E5%AE%B6%E7%BC%96%E7%A8%8B/</link><pubDate>Wed, 23 Feb 2022 00:00:00 +0000</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/golang/go-%E4%B8%93%E5%AE%B6%E7%BC%96%E7%A8%8B/</guid><description>进阶 编译原理 Token -&amp;gt; 语法树 AST -&amp;gt; 中间码 -&amp;gt; 机器码 词法与语法分析 词法分析的作用就是解析源代码文件，它将文件中的字符串序列转换成 Token 序列，方便后面的处理和</description></item><item><title>Go Gin</title><link>https://trouvaille0198.github.io/Notes/posts/golang/webbackend/gin/</link><pubDate>Tue, 15 Feb 2022 00:00:00 +0000</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/golang/webbackend/gin/</guid><description><![CDATA[gin Gin is a HTTP web framework written in Go (Golang). It features a Martini-like API, but with performance up to 40 times faster than Martini. 1 2 3 4 5 6 7 8 9 10 11 12 13 package main import &#34;github.com/gin-gonic/gin&#34; func main() { r := gin.Default() r.GET(&#34;/ping&#34;, func(c *gin.Context) { c.JSON(200, gin.H{ &#34;message&#34;: &#34;pong&#34;, }) }) r.Run() // listen and serve on 0.0.0.0:8080 } Quick Start Installation]]></description></item><item><title>Go GORM</title><link>https://trouvaille0198.github.io/Notes/posts/golang/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C/gorm/</link><pubDate>Mon, 14 Feb 2022 00:00:00 +0000</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/golang/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C/gorm/</guid><description>gorm 官方文档：https://gorm.io/zh_CN/docs 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38</description></item><item><title>Go strings 标准库</title><link>https://trouvaille0198.github.io/Notes/posts/golang/%E6%A0%87%E5%87%86%E5%BA%93/%E6%96%87%E6%9C%AC/strings/</link><pubDate>Fri, 11 Feb 2022 00:00:00 +0000</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/golang/%E6%A0%87%E5%87%86%E5%BA%93/%E6%96%87%E6%9C%AC/strings/</guid><description>strings 由于 string 类型可以看成是一种特殊的 slice 类型，因此获取长度可以用内置的函数 len；同时支持 切片 操作，因此，子串获取很容易。 这里说的字符，指得是 rune 类</description></item><item><title>Go cobra 库</title><link>https://trouvaille0198.github.io/Notes/posts/golang/%E6%A0%87%E5%87%86%E5%BA%93/cobra/</link><pubDate>Tue, 08 Feb 2022 00:00:00 +0000</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/golang/%E6%A0%87%E5%87%86%E5%BA%93/cobra/</guid><description>cobra cobra既是一个用于创建强大现代 CLI 应用程序的库，也是一个生成应用程序和命令文件的程序。cobra 被用在很多 go 语言的项目中，比如 Kuber</description></item><item><title>Go log 标准库</title><link>https://trouvaille0198.github.io/Notes/posts/golang/%E6%A0%87%E5%87%86%E5%BA%93/log/</link><pubDate>Tue, 08 Feb 2022 00:00:00 +0000</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/golang/%E6%A0%87%E5%87%86%E5%BA%93/log/</guid><description>log Go 语言内置的 log 包实现了简单的日志服务。 使用 Logger log 包定义了 Logger 类型，该类型提供了一些格式化输出的方法。 本包也提供了一个预定义的 “标准” logge</description></item><item><title>Go 基础语法</title><link>https://trouvaille0198.github.io/Notes/posts/golang/basicgrammar/</link><pubDate>Tue, 08 Feb 2022 00:00:00 +0000</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/golang/basicgrammar/</guid><description>Golang 安装 下载地址：https://go.dev/dl/ 使用 Linux 1 2 3 4 5 6 $ wget https://studygolang.com/dl/golang/go1.13.6.linux-amd64.tar.gz $ tar -zxvf go1.13.6.linux-amd64.tar.gz $ sudo mv go /usr/local/ $ go version go version go1.13.6 linux/amd64 从 Go 1.11 版本开始，Go 提供了 Go Modules 的</description></item><item><title>Go context 标准库</title><link>https://trouvaille0198.github.io/Notes/posts/golang/%E6%A0%87%E5%87%86%E5%BA%93/context/</link><pubDate>Mon, 07 Feb 2022 00:00:00 +0000</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/golang/%E6%A0%87%E5%87%86%E5%BA%93/context/</guid><description>context 什么是 Context Context 也叫作“上下文”，是一个比较抽象的概念，一般理解为程序单元的一个运行状态、现场、快照。其中上下是指存在上下层的传递，上会把内容传</description></item><item><title>Go gopacket 库</title><link>https://trouvaille0198.github.io/Notes/posts/golang/%E6%A0%87%E5%87%86%E5%BA%93/%E7%BD%91%E7%BB%9C/gopacket/</link><pubDate>Sun, 06 Feb 2022 00:00:00 +0000</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/golang/%E6%A0%87%E5%87%86%E5%BA%93/%E7%BD%91%E7%BB%9C/gopacket/</guid><description>gopacket 1 go get github.com/google/gopacket pcap 处理 查看版本 1 2 version := pcap.Version() fmt.Println(version) 测试（Win10 x64） Npcap version 1.00, based on libpcap version 1.9.1 网络接口 类型：pcap.Interface 1 2 3 4 5 6 7 8 9 10 11</description></item></channel></rss>