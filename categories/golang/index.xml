<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Golang - 分类 - 伤心肠粉的酱油碟子</title><link>https://trouvaille0198.github.io/Notes/categories/golang/</link><description>Golang - 分类 - 伤心肠粉的酱油碟子</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Thu, 05 Jan 2023 22:19:13 +0800</lastBuildDate><atom:link href="https://trouvaille0198.github.io/Notes/categories/golang/" rel="self" type="application/rss+xml"/><item><title>Go 基础语法</title><link>https://trouvaille0198.github.io/Notes/posts/golang/basicgrammar/</link><pubDate>Thu, 05 Jan 2023 22:19:13 +0800</pubDate><author>MelonCholi</author><guid>https://trouvaille0198.github.io/Notes/posts/golang/basicgrammar/</guid><description>&lt;div class="featured-image">
&lt;img src="https://booklovinmamas.com/wp-content/uploads/2017/09/go.png" referrerpolicy="no-referrer">
&lt;/div>Golang Go is an open source programming language supported by Google Easy to learn and get started with Built-in concurrency and a robust standard library Growing ecosystem of partners, communities, and tools 安装 下载地址：h</description></item><item><title>Go test 教程</title><link>https://trouvaille0198.github.io/Notes/posts/golang/go-test/</link><pubDate>Fri, 19 Aug 2022 20:29:04 +0800</pubDate><author>MelonCholi</author><guid>https://trouvaille0198.github.io/Notes/posts/golang/go-test/</guid><description>go test Go 语言提供了 go test 命令行工具，使用该工具可以很方便的进行测试。 不仅 Go 语言源码中</description></item><item><title>Go amqp 库</title><link>https://trouvaille0198.github.io/Notes/posts/golang/%E5%B8%B8%E7%94%A8%E5%BA%93/amqp/</link><pubDate>Tue, 02 Aug 2022 00:00:00 +0000</pubDate><author>MelonCholi</author><guid>https://trouvaille0198.github.io/Notes/posts/golang/%E5%B8%B8%E7%94%A8%E5%BA%93/amqp/</guid><description>amqp amqp 主要实现了 RabbitMQ 的相关 API 1 go get -v github.com/streadway/amqp 生产者流程 连接 Connection 创建 Channel 创建或连接一个交换器 创建</description></item><item><title>os/exec</title><link>https://trouvaille0198.github.io/Notes/posts/golang/%E6%A0%87%E5%87%86%E5%BA%93/exec/</link><pubDate>Wed, 22 Jun 2022 00:00:00 +0000</pubDate><author>MelonCholi</author><guid>https://trouvaille0198.github.io/Notes/posts/golang/%E6%A0%87%E5%87%86%E5%BA%93/exec/</guid><description>os/exec 在 Golang 中用于执行命令的库是 os/exec 快速上手 exec.Command 函数返回一个 Cmd 对象，根据不同的需求，可以将</description></item><item><title>text/template</title><link>https://trouvaille0198.github.io/Notes/posts/golang/%E6%A0%87%E5%87%86%E5%BA%93/%E6%96%87%E6%9C%AC/template/</link><pubDate>Wed, 22 Jun 2022 00:00:00 +0000</pubDate><author>MelonCholi</author><guid>https://trouvaille0198.github.io/Notes/posts/golang/%E6%A0%87%E5%87%86%E5%BA%93/%E6%96%87%E6%9C%AC/template/</guid><description>text/template text/template 是 Golang 标准库，实现数据驱动模板以生成文本输出，可理解为一组文本按照特定格式嵌套</description></item><item><title>Go Viper 库</title><link>https://trouvaille0198.github.io/Notes/posts/golang/%E5%B8%B8%E7%94%A8%E5%BA%93/viper/</link><pubDate>Sun, 08 May 2022 00:00:00 +0000</pubDate><author>MelonCholi</author><guid>https://trouvaille0198.github.io/Notes/posts/golang/%E5%B8%B8%E7%94%A8%E5%BA%93/viper/</guid><description>Viper Viper 是适用于 Go 应用程序的完整配置解决方案。它被设计用于在应用程序中工作，并且可以</description></item><item><title>bufio</title><link>https://trouvaille0198.github.io/Notes/posts/golang/%E6%A0%87%E5%87%86%E5%BA%93/io/bufio/</link><pubDate>Thu, 10 Mar 2022 00:00:00 +0000</pubDate><author>MelonCholi</author><guid>https://trouvaille0198.github.io/Notes/posts/golang/%E6%A0%87%E5%87%86%E5%BA%93/io/bufio/</guid><description>bufio Go 语言在 io 操作中，还提供了一个 bufio 的包，使用这个包可以大幅提高文件读写的效率。 参</description></item><item><title>Docker</title><link>https://trouvaille0198.github.io/Notes/posts/%E5%B7%A5%E5%85%B7/docker/</link><pubDate>Mon, 07 Mar 2022 00:00:00 +0000</pubDate><author>MelonCholi</author><guid>https://trouvaille0198.github.io/Notes/posts/%E5%B7%A5%E5%85%B7/docker/</guid><description>&lt;div class="featured-image">
&lt;img src="https://markdown-1303167219.cos.ap-shanghai.myqcloud.com/Moby-share.png" referrerpolicy="no-referrer">
&lt;/div>Docker 摘自：https://yeasy.gitbook.io/docker_prac</description></item><item><title>Go 非类型安全指针</title><link>https://trouvaille0198.github.io/Notes/posts/golang/%E8%BF%9B%E9%98%B6/%E9%9D%9E%E7%B1%BB%E5%9E%8B%E5%AE%89%E5%85%A8%E6%8C%87%E9%92%88/</link><pubDate>Mon, 07 Mar 2022 00:00:00 +0000</pubDate><author>MelonCholi</author><guid>https://trouvaille0198.github.io/Notes/posts/golang/%E8%BF%9B%E9%98%B6/%E9%9D%9E%E7%B1%BB%E5%9E%8B%E5%AE%89%E5%85%A8%E6%8C%87%E9%92%88/</guid><description>非类型安全指针 相对于 C 指针，Go 指针有很多限制。 比如，Go 指针不支持算术运算，并</description></item><item><title>Go 类型系统</title><link>https://trouvaille0198.github.io/Notes/posts/golang/%E8%BF%9B%E9%98%B6/go-%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E8%AF%A6%E8%A7%A3/</link><pubDate>Mon, 07 Mar 2022 00:00:00 +0000</pubDate><author>MelonCholi</author><guid>https://trouvaille0198.github.io/Notes/posts/golang/%E8%BF%9B%E9%98%B6/go-%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E8%AF%A6%E8%A7%A3/</guid><description>Go 类型系统 太难了根本看不懂 T T 概述 本文将介绍 Go 中的各个类型种类。Go 类型系统中的</description></item></channel></rss>