<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Go 库 - 标签 - 伤心肠粉的酱油碟子</title><link>https://trouvaille0198.github.io/Notes/tags/go-%E5%BA%93/</link><description>Go 库 - 标签 - 伤心肠粉的酱油碟子</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Tue, 02 Aug 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://trouvaille0198.github.io/Notes/tags/go-%E5%BA%93/" rel="self" type="application/rss+xml"/><item><title>Go amqp 库</title><link>https://trouvaille0198.github.io/Notes/posts/golang/%E5%B8%B8%E7%94%A8%E5%BA%93/amqp/</link><pubDate>Tue, 02 Aug 2022 00:00:00 +0000</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/golang/%E5%B8%B8%E7%94%A8%E5%BA%93/amqp/</guid><description>amqp amqp 主要实现了 RabbitMQ 的相关 API 1 go get -v github.com/streadway/amqp 生产者流程 连接 Connection 创建 Channel 创建或连接一个交换器 创建</description></item><item><title>os/exec</title><link>https://trouvaille0198.github.io/Notes/posts/golang/%E6%A0%87%E5%87%86%E5%BA%93/exec/</link><pubDate>Wed, 22 Jun 2022 00:00:00 +0000</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/golang/%E6%A0%87%E5%87%86%E5%BA%93/exec/</guid><description>os/exec 在 Golang 中用于执行命令的库是 os/exec 快速上手 exec.Command 函数返回一个 Cmd 对象，根据不同的需求，可以将</description></item><item><title>Go Viper 库</title><link>https://trouvaille0198.github.io/Notes/posts/golang/%E5%B8%B8%E7%94%A8%E5%BA%93/viper/</link><pubDate>Sun, 08 May 2022 00:00:00 +0000</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/golang/%E5%B8%B8%E7%94%A8%E5%BA%93/viper/</guid><description>Viper Viper 是适用于 Go 应用程序的完整配置解决方案。它被设计用于在应用程序中工作，并且可以</description></item><item><title>bufio</title><link>https://trouvaille0198.github.io/Notes/posts/golang/%E6%A0%87%E5%87%86%E5%BA%93/io/bufio/</link><pubDate>Thu, 10 Mar 2022 00:00:00 +0000</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/golang/%E6%A0%87%E5%87%86%E5%BA%93/io/bufio/</guid><description>bufio Go 语言在 io 操作中，还提供了一个 bufio 的包，使用这个包可以大幅提高文件读写的效率。 参</description></item><item><title>Go runtime/pprof库</title><link>https://trouvaille0198.github.io/Notes/posts/golang/%E6%A0%87%E5%87%86%E5%BA%93/pprof/</link><pubDate>Thu, 03 Mar 2022 00:00:00 +0000</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/golang/%E6%A0%87%E5%87%86%E5%BA%93/pprof/</guid><description>runtime/pprof 简介 benchmark (基准测试) 可以度量某个函数或方法的性能，也就是说，如果我们知道性能的瓶</description></item><item><title>Go strings 标准库</title><link>https://trouvaille0198.github.io/Notes/posts/golang/%E6%A0%87%E5%87%86%E5%BA%93/%E6%96%87%E6%9C%AC/strings/</link><pubDate>Fri, 11 Feb 2022 00:00:00 +0000</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/golang/%E6%A0%87%E5%87%86%E5%BA%93/%E6%96%87%E6%9C%AC/strings/</guid><description>strings 由于 string 类型可以看成是一种特殊的 slice 类型，因此获取长度可以用内置的函数 len；同时</description></item><item><title>Go cobra 库</title><link>https://trouvaille0198.github.io/Notes/posts/golang/%E5%B8%B8%E7%94%A8%E5%BA%93/cobra/</link><pubDate>Tue, 08 Feb 2022 00:00:00 +0000</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/golang/%E5%B8%B8%E7%94%A8%E5%BA%93/cobra/</guid><description>cobra cobra 既是一个用于创建强大现代 CLI 应用程序的库，也是一个生成应用程序和命令文件的程序</description></item><item><title>Go log 标准库</title><link>https://trouvaille0198.github.io/Notes/posts/golang/%E6%A0%87%E5%87%86%E5%BA%93/log/</link><pubDate>Tue, 08 Feb 2022 00:00:00 +0000</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/golang/%E6%A0%87%E5%87%86%E5%BA%93/log/</guid><description>log Go 语言内置的 log 包实现了简单的日志服务。 使用 Logger log 包定义了 Logger 类型，该类型提供了一些</description></item><item><title>Go context 标准库</title><link>https://trouvaille0198.github.io/Notes/posts/golang/%E6%A0%87%E5%87%86%E5%BA%93/context/</link><pubDate>Mon, 07 Feb 2022 00:00:00 +0000</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/golang/%E6%A0%87%E5%87%86%E5%BA%93/context/</guid><description>context 什么是 Context Context 也叫作上下文，是一个比较抽象的概念，一般理解为程序单元的一个运行状态</description></item><item><title>Go gopacket 库</title><link>https://trouvaille0198.github.io/Notes/posts/golang/%E5%B8%B8%E7%94%A8%E5%BA%93/gopacket/</link><pubDate>Sun, 06 Feb 2022 00:00:00 +0000</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/golang/%E5%B8%B8%E7%94%A8%E5%BA%93/gopacket/</guid><description>gopacket 1 go get github.com/google/gopacket pcap 处理 查看版本 1 2 version := pcap.Version() fmt.Println(version) 测试（Win10 x64） Npcap version 1.00, based on libpcap version 1.9.1 网络</description></item></channel></rss>