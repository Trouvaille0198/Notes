<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Python - 标签 - 伤心肠粉的酱油碟子</title><link>https://trouvaille0198.github.io/Notes/tags/python/</link><description>Python - 标签 - 伤心肠粉的酱油碟子</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Mon, 29 Aug 2022 14:29:55 +0800</lastBuildDate><atom:link href="https://trouvaille0198.github.io/Notes/tags/python/" rel="self" type="application/rss+xml"/><item><title>Seaborn</title><link>https://trouvaille0198.github.io/Notes/posts/python/dataanalysis/seaborn/</link><pubDate>Mon, 29 Aug 2022 14:29:55 +0800</pubDate><author>MelonCholi</author><guid>https://trouvaille0198.github.io/Notes/posts/python/dataanalysis/seaborn/</guid><description>Seaborn 基本知识 概念 seaborn 是基于 matplotlib 的图形可视化 python 包。它提供了一种高度交互式界面，便于用户能</description></item><item><title>Python 基础语法</title><link>https://trouvaille0198.github.io/Notes/posts/python/basicgrammar/</link><pubDate>Mon, 22 Aug 2022 19:59:42 +0800</pubDate><author>MelonCholi</author><guid>https://trouvaille0198.github.io/Notes/posts/python/basicgrammar/</guid><description>基础语法 认识 强类型语言：解释器会根据赋值或运算来自动推断变量类型 动态类型语言：变</description></item><item><title>BeautifulSoup4</title><link>https://trouvaille0198.github.io/Notes/posts/python/crawler/beautifulsoup4/</link><pubDate>Fri, 19 Aug 2022 21:11:11 +0800</pubDate><author>MelonCholi</author><guid>https://trouvaille0198.github.io/Notes/posts/python/crawler/beautifulsoup4/</guid><description><![CDATA[BeautifulSoup4 基本操作 导入 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 from bs4 import BeautifulSoup html_doc = &#34;&#34;&#34; &lt;html&gt;&lt;head&gt;&lt;title&gt;The Dormouse&#39;s story&lt;/title&gt;&lt;/head&gt; &lt;body&gt; &lt;p class=&#34;title&#34;&gt;&lt;b&gt;The Dormouse&#39;s story&lt;/b&gt;&lt;/p&gt; &lt;p class=&#34;story&#34;&gt;Once upon]]></description></item><item><title>PyQuery</title><link>https://trouvaille0198.github.io/Notes/posts/python/crawler/pyquery/</link><pubDate>Fri, 19 Aug 2022 21:11:11 +0800</pubDate><author>MelonCholi</author><guid>https://trouvaille0198.github.io/Notes/posts/python/crawler/pyquery/</guid><description><![CDATA[PyQuery 初始化 1 from pyquery import PyQuery as pq 字符初始化 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 html = &#39;&#39;&#39; &lt;div class=&#34;wrap&#34;&gt; &lt;div id=&#34;container&#34;&gt; &lt;ul class=&#34;list&#34;&gt;]]></description></item><item><title>reuqest API</title><link>https://trouvaille0198.github.io/Notes/posts/python/crawler/requests/</link><pubDate>Fri, 19 Aug 2022 21:11:11 +0800</pubDate><author>MelonCholi</author><guid>https://trouvaille0198.github.io/Notes/posts/python/crawler/requests/</guid><description>request API 模块 *requests.request(method, url, *kwargs) *requests.get(url, params=None, *kwargs) *requests.options(url, *kwargs) *requests.head(url, *kwargs) *requests.post(url, data=None, json=None, *kwargs) *requests.put(url, data=None, *kwargs) *requests.patch(url, data=None, *kwargs) *requests.delete(url, *kwargs) 除了requests.req</description></item><item><title>Selenium</title><link>https://trouvaille0198.github.io/Notes/posts/python/crawler/selenium/</link><pubDate>Fri, 19 Aug 2022 21:11:11 +0800</pubDate><author>MelonCholi</author><guid>https://trouvaille0198.github.io/Notes/posts/python/crawler/selenium/</guid><description>Selenium 基本操作 Selenium 是一个自动化测试工具，利用它可以驱动浏览器执行特定的动作，如点击、下</description></item><item><title>Xpath</title><link>https://trouvaille0198.github.io/Notes/posts/python/crawler/xpath/</link><pubDate>Fri, 19 Aug 2022 21:11:11 +0800</pubDate><author>MelonCholi</author><guid>https://trouvaille0198.github.io/Notes/posts/python/crawler/xpath/</guid><description>Xpath 基本操作 注意：当 element 对象使用 xpath 方法时，切记在语法字符串前加上当前路径 . 导入 从字符</description></item><item><title>正则表达式</title><link>https://trouvaille0198.github.io/Notes/posts/python/crawler/regularexpression/</link><pubDate>Fri, 19 Aug 2022 21:11:11 +0800</pubDate><author>MelonCholi</author><guid>https://trouvaille0198.github.io/Notes/posts/python/crawler/regularexpression/</guid><description>正则表达式 清晰易懂版 单字符匹配 字符 功能 . 匹配任意1个字符（除了\n） [ ] 匹配[ ]</description></item><item><title>Django</title><link>https://trouvaille0198.github.io/Notes/posts/python/web-backend/django/</link><pubDate>Fri, 19 Aug 2022 20:29:04 +0800</pubDate><author>MelonCholi</author><guid>https://trouvaille0198.github.io/Notes/posts/python/web-backend/django/</guid><description>Django 认识 概念 URLs: 虽然可以通过单个功能来处理来自每个 URL 的请求，但是编写单独的视图函数来</description></item><item><title>FastAPI</title><link>https://trouvaille0198.github.io/Notes/posts/python/web-backend/fastapi/</link><pubDate>Fri, 19 Aug 2022 20:29:04 +0800</pubDate><author>MelonCholi</author><guid>https://trouvaille0198.github.io/Notes/posts/python/web-backend/fastapi/</guid><description>FastAPI 认识 运行 1 uvicorn main:app --reload main：main.py 文件（一个 Python「模块」）。 ap</description></item></channel></rss>