<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>后端 - 标签 - 伤心肠粉的酱油碟子</title><link>https://trouvaille0198.github.io/Notes/tags/%E5%90%8E%E7%AB%AF/</link><description>后端 - 标签 - 伤心肠粉的酱油碟子</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sun, 15 Oct 2023 20:18:57 +0800</lastBuildDate><atom:link href="https://trouvaille0198.github.io/Notes/tags/%E5%90%8E%E7%AB%AF/" rel="self" type="application/rss+xml"/><item><title>pydantic models</title><link>https://trouvaille0198.github.io/Notes/posts/python/web-backend/pydantic/models/</link><pubDate>Sun, 15 Oct 2023 20:18:57 +0800</pubDate><author>MelonCholi</author><guid>https://trouvaille0198.github.io/Notes/posts/python/web-backend/pydantic/models/</guid><description>models 通过创建一个继承 BaseModel 的子类（model）来定义一类对象（defining obje</description></item><item><title>Flask</title><link>https://trouvaille0198.github.io/Notes/posts/python/web-backend/flask/</link><pubDate>Tue, 11 Jul 2023 21:32:31 +0800</pubDate><author>MelonCholi</author><guid>https://trouvaille0198.github.io/Notes/posts/python/web-backend/flask/</guid><description><![CDATA[Flask 例子 初始化 1 2 3 4 5 6 7 8 9 10 from flask import Flask app = Flask(__name__) @app.route(&#39;/&#39;) def hello_world(): return &#39;Hello, World!&#39; app.run(debug=True) # 自动以调试方式运行]]></description></item><item><title>pydantic field types</title><link>https://trouvaille0198.github.io/Notes/posts/python/web-backend/pydantic/field-types/</link><pubDate>Fri, 02 Dec 2022 20:33:48 +0800</pubDate><author>MelonCholi</author><guid>https://trouvaille0198.github.io/Notes/posts/python/web-backend/pydantic/field-types/</guid><description>field types pydantic 尽可能的使用标准库类型（standard library types）来标注字段来提供一个</description></item><item><title>Django</title><link>https://trouvaille0198.github.io/Notes/posts/python/web-backend/django/</link><pubDate>Fri, 19 Aug 2022 20:29:04 +0800</pubDate><author>MelonCholi</author><guid>https://trouvaille0198.github.io/Notes/posts/python/web-backend/django/</guid><description>Django 认识 概念 URLs: 虽然可以通过单个功能来处理来自每个 URL 的请求，但是编写单独的视图函数来</description></item><item><title>FastAPI</title><link>https://trouvaille0198.github.io/Notes/posts/python/web-backend/fastapi/</link><pubDate>Fri, 19 Aug 2022 20:29:04 +0800</pubDate><author>MelonCholi</author><guid>https://trouvaille0198.github.io/Notes/posts/python/web-backend/fastapi/</guid><description>FastAPI 认识 运行 1 uvicorn main:app --reload main：main.py 文件（一个 Python「模块」）。 ap</description></item><item><title>Go Gin</title><link>https://trouvaille0198.github.io/Notes/posts/golang/webbackend/gin/</link><pubDate>Fri, 25 Feb 2022 21:46:44 +0800</pubDate><author>MelonCholi</author><guid>https://trouvaille0198.github.io/Notes/posts/golang/webbackend/gin/</guid><description>gin Gin is a HTTP web framework written in Go (Golang). It features a Martini-like API, but with performance up to 40 times faster than Martini. 1 2 3 4 5 6 7 8 9 10 11 12 13 package</description></item><item><title>Go go-redis 库</title><link>https://trouvaille0198.github.io/Notes/posts/golang/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C/go-redis/</link><pubDate>Mon, 14 Feb 2022 00:00:00 +0000</pubDate><author>MelonCholi</author><guid>https://trouvaille0198.github.io/Notes/posts/golang/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C/go-redis/</guid><description>go-redis 官方文档：https://redis.uptrace.dev/zh/guide</description></item><item><title>Go GORM 库</title><link>https://trouvaille0198.github.io/Notes/posts/golang/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C/gorm/</link><pubDate>Mon, 14 Feb 2022 00:00:00 +0000</pubDate><author>MelonCholi</author><guid>https://trouvaille0198.github.io/Notes/posts/golang/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C/gorm/</guid><description>gorm 官方文档：https://gorm.io/zh_CN/docs 1 2 3 4 5 6 7 8</description></item><item><title>API 规范</title><link>https://trouvaille0198.github.io/Notes/posts/frontend/api-%E8%A7%84%E8%8C%83/</link><pubDate>Sat, 11 Dec 2021 00:00:00 +0000</pubDate><author>MelonCholi</author><guid>https://trouvaille0198.github.io/Notes/posts/frontend/api-%E8%A7%84%E8%8C%83/</guid><description>API 规范 Filtering 如果记录数量很多，服务器不可能都将它们返回给用户。API 应该 提供参数，过</description></item><item><title>SQLAlchemy</title><link>https://trouvaille0198.github.io/Notes/posts/python/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BA%A4%E4%BA%92/sqlalchemy/</link><pubDate>Sat, 23 Oct 2021 00:00:00 +0000</pubDate><author>MelonCholi</author><guid>https://trouvaille0198.github.io/Notes/posts/python/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BA%A4%E4%BA%92/sqlalchemy/</guid><description>SQLAlchemy 认识 ORM：Object Relational Mapping（对象关系映射）将数据库中的表与类构建</description></item></channel></rss>