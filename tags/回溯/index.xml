<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>回溯 - 标签 - 伤心肠粉的酱油碟子</title><link>https://trouvaille0198.github.io/Notes/tags/%E5%9B%9E%E6%BA%AF/</link><description>回溯 - 标签 - 伤心肠粉的酱油碟子</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sun, 06 Mar 2022 08:02:35 +0000</lastBuildDate><atom:link href="https://trouvaille0198.github.io/Notes/tags/%E5%9B%9E%E6%BA%AF/" rel="self" type="application/rss+xml"/><item><title>剑指 Offer 12. 矩阵中的路径</title><link>https://trouvaille0198.github.io/Notes/posts/%E5%88%B7%E9%A2%98/back-tracking/%E5%89%91%E6%8C%87-offer-12.-%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%9A%84%E8%B7%AF%E5%BE%84/</link><pubDate>Sun, 06 Mar 2022 08:02:35 +0000</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/%E5%88%B7%E9%A2%98/back-tracking/%E5%89%91%E6%8C%87-offer-12.-%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%9A%84%E8%B7%AF%E5%BE%84/</guid><description>剑指 Offer 12. 矩阵中的路径 mid 给定一个 m x n 二维字符网格 board 和一个字符串单词 word 。如果 word 存在于网格中，返回 true ；否则，返回 false 。 单词必须按照字母顺序，通过相</description></item><item><title>剑指 Offer 55 - II. 平衡二叉树</title><link>https://trouvaille0198.github.io/Notes/posts/%E5%88%B7%E9%A2%98/tree/%E5%89%91%E6%8C%87-offer-55-ii.-%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%A0%91/</link><pubDate>Sun, 06 Mar 2022 08:02:35 +0000</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/%E5%88%B7%E9%A2%98/tree/%E5%89%91%E6%8C%87-offer-55-ii.-%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%A0%91/</guid><description>剑指 Offer 55 - II. 平衡二叉树 easy 输入一棵二叉树的根节点，判断该树是不是平衡二叉树。如果某二叉树中任意节点的左右子树的深度相差不超过1，那么它就是一棵</description></item><item><title>剑指 Offer 64. 求1+2+…+n</title><link>https://trouvaille0198.github.io/Notes/posts/%E5%88%B7%E9%A2%98/back-tracking/%E5%89%91%E6%8C%87-offer-64.-%E6%B1%821+2++n/</link><pubDate>Sun, 06 Mar 2022 08:02:35 +0000</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/%E5%88%B7%E9%A2%98/back-tracking/%E5%89%91%E6%8C%87-offer-64.-%E6%B1%821+2++n/</guid><description>剑指 Offer 64. 求1+2+…+n mid 求 1+2+...+n ，要求不能使用乘除法、for、while、if、else、switch、case等关键字及条件判断语句（A?B</description></item><item><title>剑指 Offer 68 - II. 二叉树的最近公共祖先</title><link>https://trouvaille0198.github.io/Notes/posts/%E5%88%B7%E9%A2%98/tree/%E5%89%91%E6%8C%87-offer-68-ii.-%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88/</link><pubDate>Sun, 06 Mar 2022 08:02:35 +0000</pubDate><author>作者</author><guid>https://trouvaille0198.github.io/Notes/posts/%E5%88%B7%E9%A2%98/tree/%E5%89%91%E6%8C%87-offer-68-ii.-%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88/</guid><description>剑指 Offer 68 - II. 二叉树的最近公共祖先 给定一个二叉树, 找到该树中两个指定节点的最近公共祖先。 DFS 递归地判断子树是否包含了 p 或 q 1 2 3 4 5 6 7 8 9 10 11</description></item></channel></rss>